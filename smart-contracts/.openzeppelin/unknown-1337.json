{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x10b703B9164aeF8748bA8936A597512fd74a1bc1",
      "txHash": "0x4f63de0df48b3eeae4583fd3d04dec48288849bfe8ae1fec5395508bc1288e18",
      "kind": "uups"
    },
    {
      "address": "0x5a742E40dCb7aE834742d68c6ea827C40E00f1f3",
      "txHash": "0xbb33490c9e5db02693f44d34bebbe898eb64cf9573993885491bce46b95ae448",
      "kind": "uups"
    },
    {
      "address": "0x8458cE97df180A6834A57e0D3ED0cFA97439B900",
      "txHash": "0x85561e84a67989e7c2f39dbe0b75260a3fa9100f98e10324ca6760b77d70ca86",
      "kind": "uups"
    },
    {
      "address": "0xa11E0FEED67611d011E8e8783f78b7830164De2e",
      "txHash": "0x168b5b54e50ffd999635f8e594db940d6ec1312e62b441ac732beb5d397204b9",
      "kind": "uups"
    },
    {
      "address": "0x59409b4d64bACFec6DC5393a5d2E67027DBb6857",
      "txHash": "0xf0d7265d1399d956d2aa4d9984960c8426af53b728e4363cd356c76056761f35",
      "kind": "uups"
    },
    {
      "address": "0x1A3257D43C85b192E7Fa248115792829b7926B66",
      "txHash": "0x0c215ca2261ce60231c111b2b6efe2b387e006fee74b2f7ca1bd34687d99a574",
      "kind": "uups"
    },
    {
      "address": "0xAAaDa77063096e40Fe76Df7FA984802A842f898f",
      "txHash": "0x6c6ce8eedb526fabd0572dca195adafa9dee5750cce68a90bcfff633967f67fb",
      "kind": "uups"
    },
    {
      "address": "0xAFB06d014eDA77B49F92F12541b78f4798357f0E",
      "txHash": "0x5015fd0e946d85656731e56863bc06de9381eda2729b283d940496bafeacbaf2",
      "kind": "uups"
    },
    {
      "address": "0xE0c7c6B1f1427F8fb9012C59D9066a0a47735a0E",
      "txHash": "0x4c9d239fbb21273989851e007f46431137acf9c610ffeb9609ca74370a2f0e04",
      "kind": "uups"
    },
    {
      "address": "0xc130bBb918B8785b6B8497663B649d0D156Bb86e",
      "txHash": "0x65eb355721f455a093f47a59552efec2bc28784d48a863e95522641a2ba7c31a",
      "kind": "uups"
    },
    {
      "address": "0xcaC825F0955aEa17e95aCFd909bf0f3b62017c38",
      "txHash": "0x143ccecad4f51e764048c1d5e2c2d16c301bf4a71ad6015455db8305b7cce677",
      "kind": "uups"
    },
    {
      "address": "0xdf0CB40F8A26729F1CBAdB4F5307f72D2DE39e26",
      "txHash": "0xe6e512b8292d16dea810adf09a375a81a86292d3bc050f565526236e74092e48",
      "kind": "uups"
    },
    {
      "address": "0xb6dbfcb0E06303D2728Bc99B6cc2CD49d4BbC995",
      "txHash": "0xaeecabb6c909d34baffe9ba293fed5ff8c17fb10388f51f8219130f161d9186c",
      "kind": "uups"
    },
    {
      "address": "0x9eE6fC1456F74dD40af463f1AB7F4F3D1eAbe123",
      "txHash": "0xd1ac7c16f003adc143d62e8527c4755edfca46bae73759c88016233b56651faf",
      "kind": "uups"
    },
    {
      "address": "0xA46Af4760e657aCEF4448358d053E623739cBF92",
      "txHash": "0x300b96c3ab1ecf44f806810cefd3464be1b0a1d5846911e6de4cc8529331ed74",
      "kind": "uups"
    },
    {
      "address": "0x39d9982018F15D5f10385fb425a0eC7240baE392",
      "txHash": "0x80f6b34cd345e7fae28dbc66d1eeae3c60220ac7f7ae0facd1597bb9804d1c84",
      "kind": "uups"
    },
    {
      "address": "0x7Ba3C28516883EA8f29b5807D4af9A2Df940d92e",
      "txHash": "0x4c7cc3d1d773767dc2a8085626a181d8a4d45d5ee6c7eb9196c770873669f955",
      "kind": "uups"
    },
    {
      "address": "0xeF385e06eafc950eC9E77540b26AA8f12f946302",
      "txHash": "0xf9e041ca01b0cc040ca82e6ffdeff8cbb0bc164206bb13a21b7e050a0d2c30e0",
      "kind": "uups"
    },
    {
      "address": "0x5BC40845491289C1e3B366CE968688b148f193B0",
      "txHash": "0xaf0b3f4806b82fb2750aa25a657a1a3e59bdffb7d9384076b2179ecc6ed762dd",
      "kind": "uups"
    },
    {
      "address": "0x1c3516030C887e7fD37a6376527695a1E876fA0F",
      "txHash": "0x7dabdef41737f8a1be98ec76036f69ba72a0eb12dcf2440ec0c108da221896c8",
      "kind": "uups"
    },
    {
      "address": "0x47B7517532af60Edb9d5ec606a72C1eD7871D175",
      "txHash": "0x1f46674a7510c7e868505bbd70fa58beba72072320f1eaf3461cb3b904503494",
      "kind": "uups"
    },
    {
      "address": "0x65eb98B95a8D608C485bA0273229c90D6F0C71DD",
      "txHash": "0xcc89ff08c20d031fd937ae23e1321782c3e2b0dd6c62782ecd699f7992281b8f",
      "kind": "uups"
    },
    {
      "address": "0xF0b31515229cD6f570D84A2C27444d371aE5CAdb",
      "txHash": "0x505fea46a16ccf8c2c855eb2266cf39ed6a6061fa4676f580009ee37dd50fdca",
      "kind": "uups"
    },
    {
      "address": "0x446AAA9cf76687e72B953a0D5b70a7bA0E7cc8c1",
      "txHash": "0x98aac7865023f9138a8442b060ef27642e24a28d46ed80a62d1672f45e612843",
      "kind": "uups"
    },
    {
      "address": "0xE28519432Cbc320a19C7136E5591109AdBfF7fe5",
      "txHash": "0xc7a78fa96ef709581df3fd8bc10eb5361d384fb0fd22604f25456a70bc04c883",
      "kind": "uups"
    },
    {
      "address": "0xB4618C4756117Ed4728DF4788d06B1B2A1EaFe37",
      "txHash": "0x594f3b364f6a9161e1a0414ad28b95304942e6e0b5277f544c7b8ade39fb672e",
      "kind": "uups"
    },
    {
      "address": "0x631B2d9C9c904d502F1148256b45DDF32943C401",
      "txHash": "0xe1ccf6342ba2e9ce3c24299e352c72eccd7a0284650bb838bf8d3eaf55e14db0",
      "kind": "uups"
    },
    {
      "address": "0x8f2905ABA89A54d671B5837EFc08102975449953",
      "txHash": "0xbefd386bac6336563b4791ca861f5257ca4b3a3658a7af0b2b55f746ee4521e5",
      "kind": "uups"
    },
    {
      "address": "0x74149dE9CB236afac572Fc1f2d9c7C96d6DCeC4a",
      "txHash": "0xb4ab2bd0c09716d946705b5f0f19044d1f1c382321daf2bcc5371edb8588e113",
      "kind": "uups"
    },
    {
      "address": "0xccd8e1b3039B8b02d0eE61897a8C520Fad6CBB74",
      "txHash": "0x788cc264d7d14751d238e8c582332f706ec6654b916b317955b425e1ca8f31d6",
      "kind": "uups"
    },
    {
      "address": "0x5cC4AeddF42704cC32F5095AE57e1e95F484bb64",
      "txHash": "0xec5c4c48304c46c8ce7cb8daf971e4968dbf59df1b34c5a006e61e55f4f13839",
      "kind": "uups"
    },
    {
      "address": "0xA0bC60B05001D7bb818D9497E582938FB85aa6a6",
      "txHash": "0xbcc2f5b75be335821844d8d156c320ee3133792ffb50902b19a49a3fd41b0835",
      "kind": "uups"
    },
    {
      "address": "0x8cE58EC8B80c492083F6f19c02b027D41637F802",
      "txHash": "0x4efbf9b4c6aa99de9c91e40dcbdf308b1d00ecf9245bf1027464d190696dcf6f",
      "kind": "uups"
    },
    {
      "address": "0x33eBf733ed4DfE47714B9e6e67c6D75F08CF8702",
      "txHash": "0xe1368a236cfe42897c47e60fb81cc43e7d9852ee80749f510b298bc033f112e7",
      "kind": "uups"
    },
    {
      "address": "0xb82394e0a057E864917b26399f41BD60DEE5bB53",
      "txHash": "0x857d93a46cd68426bf46b2f0df201fe65cb3bf28178a6248aac4781d0a1f63b4",
      "kind": "uups"
    },
    {
      "address": "0xf9b55196C222173A715A9D687a99d479a5524F79",
      "txHash": "0xb7217ba9c7a6761c65264f519eefa358f48bd102f255f8d5dfb10077a8950f55",
      "kind": "uups"
    },
    {
      "address": "0x991678eeB40f6A4206aBCE72827AE64e356adf6c",
      "txHash": "0x85fb6d44e49d28b4eac3148686088ad44ef815a3b3c63588a72d998f9ea6efed",
      "kind": "uups"
    },
    {
      "address": "0x0522FaD5345456A704642f4C302D12c1dD108057",
      "txHash": "0xc8cd5de85242f20095ca49d91f38d78d2c623b87fe891df397092dffd664f94a",
      "kind": "uups"
    },
    {
      "address": "0xcc5171e23F9B8cEbcb4FCAe8Ac90CF723Fe21A20",
      "txHash": "0x1dc079e797c3bc50d92c4be02a05bced815902f8d2c386debba2056fdd71afb5",
      "kind": "uups"
    },
    {
      "address": "0x6e64c6AbbCf80A924Bd7711C1e17c0f423705048",
      "txHash": "0x0515077891ef386004e6c5056f8609192fd93a7cd322c49a0a76f1c067fed589",
      "kind": "uups"
    },
    {
      "address": "0xf6EB74e97f0e2F10485f14DEA9DC95b4739853d7",
      "txHash": "0xe6875537fef2ca1d68a8af091d5261b18b467743ef93ed8a9fc6280fbff09f78",
      "kind": "uups"
    },
    {
      "address": "0xe11374CeA871Ad8E5fCadC51109eB4A21da5010f",
      "txHash": "0x397d9ba4fb0d762217e73946b6ad012e531158c1c3fe301b6f8f4fca19a2f2e0",
      "kind": "uups"
    },
    {
      "address": "0xAC9417C24Fe1301CD42B5550A45e784f14F0E0e8",
      "txHash": "0x3dd0e3d1da461fd05327d9aa5e085f3b1695d29bcddb5b98e12a1108026f360c",
      "kind": "uups"
    },
    {
      "address": "0xfEd352e9366a558e956e0b981E1B2C5415786FA5",
      "txHash": "0x5a0e408f6ddb3fe200ba85ca8a001c1930be618b236a3d2bc2e4160939684fa5",
      "kind": "uups"
    },
    {
      "address": "0xBEe42817Ae5c6cb96f42246A398b01a1c6cc2009",
      "txHash": "0x10b6f658b4e552e539b807eedd00bf73edbbb610aaebdecc3d8f0e7bd07eda9b",
      "kind": "uups"
    },
    {
      "address": "0x51A75c633Fa721d9F97A7dE078a8e4E9ac0B0B8a",
      "txHash": "0x476efa985f161f98f99cc7e272ffaa47398211a9316b2e84174039974e2cd759",
      "kind": "uups"
    },
    {
      "address": "0x44e575691c88D0Ca96fb9dC54940E90C76218Ae4",
      "txHash": "0x373d9f4b5f320b0eb6ca3b3f41b3abfe290c65938e9bd85f02d84f12a15f4aff",
      "kind": "uups"
    },
    {
      "address": "0x469D855f3Fd768897Ca65758789036c45D9c571f",
      "txHash": "0x3030311b172791221c5cc524c7f156f279728d603299f9dd8fd9001251c7b538",
      "kind": "uups"
    },
    {
      "address": "0xa552D15e1010243494e8a4409CC9211E090723c3",
      "txHash": "0x2699c35c48e8b56c2e82d207e28ce08c71942efd7420580934399ca670d07e04",
      "kind": "uups"
    },
    {
      "address": "0x62E16628909BB8CBA31Ce4422103A207e7323289",
      "txHash": "0x485f39204e41c462386803e030043ca5d58a5aaa6e4dac3b7aa1892d197619b5",
      "kind": "uups"
    },
    {
      "address": "0x9Bb41bdC082F7a2345a2d383a78F6db91464Ce5f",
      "txHash": "0x9ad00a58bb6941d00320519bd640ee1be566a436ac52f7f1f35e66f904f2b2d8",
      "kind": "uups"
    },
    {
      "address": "0xff745D59dbDa6D06246d1d2415cFe15d7A0A4F00",
      "txHash": "0x97d77f0e7e9debeecedb8eb361e8b0698709a3d150c48b9eb5153456d6f2cad7",
      "kind": "uups"
    },
    {
      "address": "0x3C58E3F7b37f7AF6953A4826E498C8dCa13AA7d9",
      "txHash": "0x8ce07a61657e977bd1ca800dc6d3246d804c8f020155becae4f62f920ae20277",
      "kind": "uups"
    },
    {
      "address": "0x065Fff45349C3cea3ECE41822d2a311CaAF9aF72",
      "txHash": "0xb3c126db4f88d9d0c57b567119d6bac689683fc95dfc66dbdc453d527846b999",
      "kind": "uups"
    },
    {
      "address": "0x85967Ac789cdd60c1cE879b77044F460f71bef95",
      "txHash": "0x213249f8bf5958d1e96de2a59d3ce5d3ac598743ac4f0ed87ebd194acb9427a9",
      "kind": "uups"
    },
    {
      "address": "0x5E0e91A292e475E0a721c85926B72e265A886ca7",
      "txHash": "0xfbe8d2ca387c26fb9ac52cb44156d23080bed86e494a3ae2a9d55dae15142841",
      "kind": "uups"
    },
    {
      "address": "0xC21e32EcbfE5669663B4c48814228013Ea70594B",
      "txHash": "0x4a844e9d6f258dc4c83dfc087a2ecb2d8a19674e13630a9255439e4c5357b1ac",
      "kind": "uups"
    },
    {
      "address": "0xAF7A0B086E5b35b087BcdE92B94Ac35B3EA26f65",
      "txHash": "0x5b7c76a263d6f9ea33f1c32201ffdf625e89e84cf674f1f9e238de2476c6e2b8",
      "kind": "uups"
    },
    {
      "address": "0x279280BDfAc25D943943819baE761942A363c654",
      "txHash": "0xb37800b61a3c0f128906403368507b35a2d9208a68ff3e8b25d0757d2236d1f5",
      "kind": "uups"
    },
    {
      "address": "0xCDc5195ED237d2428Fb5868eeeD92c353E75EE60",
      "txHash": "0x3eb9e53074c4333bd6656acd7d123227d5995664941dd4cbfa52a3eeb79ad65d",
      "kind": "uups"
    },
    {
      "address": "0x467EaA2A22359C46FFF3b79b320b88197d6757d7",
      "txHash": "0xbadd78b080cd5181e807f61957e8bc36ffe6646092efa1e3115be733549b5f4d",
      "kind": "uups"
    },
    {
      "address": "0xa45B68f77aa7cb5bC954aEC899f39D78d22D02EC",
      "txHash": "0x8e90e9f92a9c1d6d2da9314240cf536685b8ee14cb450302e42ae11a77309864",
      "kind": "uups"
    },
    {
      "address": "0xffB7444097425Cb4c855481c5Ee0e83e9E079E5e",
      "txHash": "0x6391eb5f52d059c45f1606579b5d97ae28af545f196152e78d2cf04d9c9664a6",
      "kind": "uups"
    },
    {
      "address": "0x6677d9600D23799Cc319Fb4793344c73AEB2DFD2",
      "txHash": "0x89464cbf14667177225922d48a4d4adfe3264d41aac10075b290b0761184845f",
      "kind": "uups"
    },
    {
      "address": "0x4A37f6Db5073Ad467dC065488030c256487e3DA3",
      "txHash": "0xaac16e04cc963f66e7d8d63da0b657a2e202d2fb4bcb3bf09ff6d55ad118c67f",
      "kind": "uups"
    },
    {
      "address": "0x75563eBC13e8d6Ef0ed5124F58bb916a57485DE0",
      "txHash": "0x694716b0e4155387624dc6cd6a6121fa9db8a16cbd1b280cd2ffbb844b414dbc",
      "kind": "uups"
    },
    {
      "address": "0x99aB3992049F813BeB723aD5C840A5139695a478",
      "txHash": "0xe0633fa13358dc054b1155366fded326d9e219483182abb5f7db4af2220c6a20",
      "kind": "uups"
    },
    {
      "address": "0x7Ef003A73321A61aD1d554b44cB51F23cA0Fe448",
      "txHash": "0xaf4f80b6e15f4694020d5039953baf71f5e2e48312492821fcfdb2c94ebe3679",
      "kind": "uups"
    },
    {
      "address": "0x0eBdb96635bbe5A6288722878F1E091699a8EB68",
      "txHash": "0x4146d87f388175aa40c3d2222f943bc106cebab34eac477b74767e0f6a917de8",
      "kind": "uups"
    },
    {
      "address": "0xb3Ec2A35F7DBd308dDa0995Cd375106e9A7F24ff",
      "txHash": "0xec5654f52ab7cecd5acebcdf44505e5f95e64ef2efeab9f9fc75c13200cf18a9",
      "kind": "uups"
    },
    {
      "address": "0x9840Ca0c1CF4EFAC382Aa2511a7c3C05bC2FdBD4",
      "txHash": "0xc0014cc8aa9cf89053457b9c9062fe4aaf2658ea0f0e09eaef7fccd4380de2db",
      "kind": "uups"
    },
    {
      "address": "0x0c06dc1324c3B8d3abc506460e8e0Ca57ccfC0bA",
      "txHash": "0x43e081eef2c7dd2aea563a175ebef49505a129e27191b1d2f9e22cd0fb787c53",
      "kind": "uups"
    },
    {
      "address": "0xbCdb352B65AF831F9b6fE623306f20DF02FB1142",
      "txHash": "0xcb4b608ac7d38680c8971e65ed77e570ab9646fee571f7518ff6c5d5fab15e6b",
      "kind": "uups"
    },
    {
      "address": "0xB7D6daFF90f70075019c4ae5672fadd243fd74dE",
      "txHash": "0x23383ca73de5c7d4ef669dfb3e75e053395bbc06e0bde50fbafdb4c7561e60a5",
      "kind": "uups"
    },
    {
      "address": "0x4e62D45Ea4B4d54415582175ee3bB5be608c7811",
      "txHash": "0x57c71a0602eb3343f81d8cbaddc790c9deff160940bf610bfe7539636fc838ac",
      "kind": "uups"
    },
    {
      "address": "0xd6a6f8e28Daa91dA7eE16B21045eAD97BB0Db240",
      "txHash": "0xc3505220d77de5075d8b2fee92443adbe36229c68d7466b545ffdae126414c54",
      "kind": "uups"
    },
    {
      "address": "0x299Cf9ed3d02F373845039119d2E83e8b0aCac9f",
      "txHash": "0xf61c4890e1a220815ec0dc772421e483a65f1eae71157bbe8fe73ce8fe5119fa",
      "kind": "uups"
    },
    {
      "address": "0xb2fE3cc1378E1acB112d2F0766D38645D16D2059",
      "txHash": "0x7db3bedc607d85e657f2e354d33202a3f6fbd64c92154ce0f5b3226f6396fc94",
      "kind": "uups"
    },
    {
      "address": "0x54f4674c52708fB7bc01d1BB9ed60b2390f47A7e",
      "txHash": "0x6ec6db383a6b4bdb629698ab40d39dfcd194f53e40c065bbbaabd71ee0bb2d08",
      "kind": "uups"
    },
    {
      "address": "0xb8392d29Cd0e1Bef60F5a9514660003717A93a92",
      "txHash": "0xc47c2bf788a47a20a2837fddcc1f3078d42c251406c8c867a64b5d0b55db43e2",
      "kind": "uups"
    },
    {
      "address": "0xAd269c3dC786f5FF2870DF16137aF424d3E8cafc",
      "txHash": "0xcef0783b10225a3d66b30363184902ff45f15b6476f66599af33d3b08ad25e97",
      "kind": "uups"
    },
    {
      "address": "0xDFc90E111B93D7fDe113e7e2297dbF4c5c7cE975",
      "txHash": "0x0582561b295402bf2877320dab0fcf79536864c6b02f4b2714bfce08f5d9939a",
      "kind": "uups"
    },
    {
      "address": "0xF922352f74bd3c312b841e6B3810598beeE35b31",
      "txHash": "0x7f5d2697168441c4ec8328baca8cf115a9f9d2c72740f266f3475e6722db0543",
      "kind": "uups"
    },
    {
      "address": "0xadf4C948B5CDB191779f0531BF1C3CC9a1e1eB0a",
      "txHash": "0x0631acf12221cd3673296958b4846dbc73fce5d5a720912e02b0b209449e89eb",
      "kind": "uups"
    },
    {
      "address": "0x2255d178F2e4c543E6a9F74a512eF6C5A07280Ce",
      "txHash": "0xf7fe75df04a5fe68e6a862f3c8851be2f50121cc17a7671984fc755a18102e1e",
      "kind": "uups"
    },
    {
      "address": "0xc6676D398e9453555DAb782040f48612ee5FCF7d",
      "txHash": "0x1d6c03b33d1a5b224c962cea912c2bc01214d5967930413ab89ea41195901279",
      "kind": "uups"
    },
    {
      "address": "0xEBCF14C8495715eaD430639C809351D810dC0722",
      "txHash": "0x432e5fe9fe1240fb69a5346ef56612c34c9530c5877a0921b6f28ccd0d869958",
      "kind": "uups"
    },
    {
      "address": "0x0b587B62E56edD9b120BF63aCf1f24a5c2ce44A6",
      "txHash": "0x1b6573018db21217b4719fa2a48cfd3fcee5cc6b7b45eb94f246c5df598b99ad",
      "kind": "uups"
    },
    {
      "address": "0x3b18dAbf3e781E692BE156B3Dc6ab5FC7fe074dF",
      "txHash": "0xdec38d0c7d1e8c402e4363d226866490a03fa903d34c8dbef91c6a83b410fbc6",
      "kind": "uups"
    },
    {
      "address": "0x5652fA4c0904313AB29b0aeF0F42570B5BBC1f79",
      "txHash": "0xc2be14151bfcd07aaf5b57cab95714c88cc43aecee8b8e04a65bb75c776fe69c",
      "kind": "uups"
    },
    {
      "address": "0xdc66Ca361E2F4F969E66cACF0A374675D1B65497",
      "txHash": "0x6b9360550d1d715898a0d2b08822c8c1189457ed414fde403b851d59d826860a",
      "kind": "uups"
    },
    {
      "address": "0xb252bceC4968f0091ca847759d7166B33Ff08304",
      "txHash": "0x050f90199e913fe77625b208dddf757f6f67e2a015c37817ddb4cd458013f420",
      "kind": "uups"
    },
    {
      "address": "0x6239346d6c0EA007FB0E9b7bFBfB7c1c76Aa6396",
      "txHash": "0x3c2409bab1cf0e256e1bec31c5dfe20237e58a4b1314ab32cc9769bdadc18779",
      "kind": "uups"
    },
    {
      "address": "0x7D41dd936477B30777B426F66317Ea7D399Cb716",
      "txHash": "0xea4f12294fc49b20808f57f2dd295cea0584ba7c71423e296266fbc2dc4cf88f",
      "kind": "uups"
    },
    {
      "address": "0x068b5Ff3CcFD24e8218952059427944aDf98412D",
      "txHash": "0xae259914cd262a78cce970912aae4dc5cd36b36521112c8f9d043a11ec24f975",
      "kind": "uups"
    },
    {
      "address": "0x79702482d614Acdaa71DaC2EEE859f6D221c63c9",
      "txHash": "0x37f5392ac614dfe9d892e74a9f3b7709ab833f390762164d21dfdb6271564a6f",
      "kind": "uups"
    },
    {
      "address": "0x109413033E721291A560acb5be9489f03b20D0F0",
      "txHash": "0x76d10ce39de741f8f6caa162fa7e77955c9befb4a901ba58dfa338312961591e",
      "kind": "uups"
    },
    {
      "address": "0xC67ee114cdcc9F31C105f486F06560798DF35dF8",
      "txHash": "0x887084540cc5f5fee8da75b78fdec4ddedd1a3645cd8ae1647f9f256902e58db",
      "kind": "uups"
    },
    {
      "address": "0x051C0e3754Dd3fE37610337a0900070D53FdF848",
      "txHash": "0xab0996c9f07332d2004fd98181aa1cd6e9a50183ac2a2a1208d857d53b092f3d",
      "kind": "uups"
    },
    {
      "address": "0xa3803A436691134A47AeF69636aA2C0b2f54D5D9",
      "txHash": "0x4053c8f6929dc5b54786efe1e1cd6a5f1f5fb7765625599b8e354ee60906e3b6",
      "kind": "uups"
    },
    {
      "address": "0xA8bDD3E492C3a0269a30dba20B04f567f6c40dB9",
      "txHash": "0x454c7c378dcb4a32db794dac274b3f60373a0def181a5fe090d6b144c1e65709",
      "kind": "uups"
    },
    {
      "address": "0xda74b704a9f50bc170c611293a7Df7c5C033d789",
      "txHash": "0x78723aa01b631168870e0a922c5aa9a36278180dcd55985cf678461f1d963f7e",
      "kind": "uups"
    }
  ],
  "impls": {
    "5b354331969901d31f39ed284dfb9c3ecd4f2b5d4647498b3c77250fd71c3e14": {
      "address": "0xcbdcdC32165a581d87E9526E1220eBb395d7397d",
      "txHash": "0x9816bf80c69177d926a219d6175865c63bd733b4a81329972ac4c633b21dabdc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "GuildHelper",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/GuildHelper.sol:17"
          },
          {
            "contract": "GuildHelper",
            "label": "knight",
            "type": "t_contract(Knight)8105",
            "src": "../project:/contracts/GuildHelper.sol:18"
          },
          {
            "contract": "GuildHelper",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/GuildHelper.sol:20"
          }
        ],
        "types": {
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8105": {
            "label": "contract Knight"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d2385bd9d5c0af96b35b2c7c417328b50a19d59aa93e391fac5c49ee0918b20a": {
      "address": "0xe975A1B4D74A3361A7BFD082211Ac0CA455bED4C",
      "txHash": "0xc2f682a500a00640b1a2cf28861ddbe10974c789f8f02d57ac39cfe711dcac05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Guild",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Guild.sol:27"
          },
          {
            "contract": "Guild",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Guild.sol:34"
          },
          {
            "contract": "Guild",
            "label": "guildCommander",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:36"
          },
          {
            "contract": "Guild",
            "label": "guildKnight",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:38"
          },
          {
            "contract": "Guild",
            "label": "lastFight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Guild.sol:40"
          },
          {
            "contract": "Guild",
            "label": "guilds",
            "type": "t_mapping(t_uint256,t_struct(GuildState)6706_storage)",
            "src": "../project:/contracts/Guild.sol:50"
          },
          {
            "contract": "Guild",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/Guild.sol:54"
          },
          {
            "contract": "Guild",
            "label": "knight",
            "type": "t_contract(Knight)8105",
            "src": "../project:/contracts/Guild.sol:55"
          },
          {
            "contract": "Guild",
            "label": "guildHelper",
            "type": "t_contract(GuildHelper)7501",
            "src": "../project:/contracts/Guild.sol:56"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(GuildState)6706_storage)": {
            "label": "mapping(uint256 => struct Guild.GuildState)"
          },
          "t_struct(GuildState)6706_storage": {
            "label": "struct Guild.GuildState",
            "members": [
              {
                "label": "emblem",
                "type": "t_string_storage"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "winRate",
                "type": "t_uint8"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8105": {
            "label": "contract Knight"
          },
          "t_contract(GuildHelper)7501": {
            "label": "contract GuildHelper"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "91af025f8b28aa382465753d054eba2782fdf12f25eb5ff413dd7df4ccfbdab5": {
      "address": "0xe7661F0EA57F5bCC39538E90b216da3710b1a23e",
      "txHash": "0x0333001fe9142916b0eb8a5bdb771745c484dddab7ccd7be08ed04d9ee8b7b45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Morale",
            "label": "guildMorale",
            "type": "t_mapping(t_uint256,t_uint16)",
            "src": "../project:/contracts/Morale.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "fae0d3270c83fd393f4132ea9f6bc2b1bb3b5a555ac73fd40d2bd013f1269f66": {
      "address": "0xbdaAd4A0894c8566f55B5468F0a1E7c2373CDA0c",
      "txHash": "0x2bd592a5fd5d91a8b9a6e1bf234cd606c027a1ef21321d96262b3a29d9f1a057",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "56ae5e81122f2a4c173a6fc4ca260db24565407f617e0174ab9a99585f97c92d": {
      "address": "0x74EB6c12DfA566d662660e15E66AF5fca34eed87",
      "txHash": "0xb043ad9a7e683efc9c8b201f728d45a1081749683fc99112382e6fb5d264cca9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d7869bd74bf5a6356a1619bd197cf1ea0d6f5fdaa08edd2d0a0f2bf4a18751b7": {
      "address": "0x0F68De1Fe2b58881d7aaFe0350DACc7eF49f5da6",
      "txHash": "0x7fea0cf36de4529d41686a4faa887bd55bae05d7ba0b8df2f0aaee26dc5e5409",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Knight",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Knight.sol:23"
          },
          {
            "contract": "Knight",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Knight.sol:28"
          },
          {
            "contract": "Knight",
            "label": "knights",
            "type": "t_mapping(t_uint256,t_struct(KnightState)7584_storage)",
            "src": "../project:/contracts/Knight.sol:38"
          },
          {
            "contract": "Knight",
            "label": "knightGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Knight.sol:43"
          },
          {
            "contract": "Knight",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Knight.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(KnightState)7584_storage)": {
            "label": "mapping(uint256 => struct Knight.KnightState)"
          },
          "t_struct(KnightState)7584_storage": {
            "label": "struct Knight.KnightState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "bonusPower",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "691542bb338c5dfa808c4b0391f31f99779bcb961882a0d2f917fe817a6cd809": {
      "address": "0x99AeEdb8Cb7D2fde7353f1206c91F47a0dec28dE",
      "txHash": "0xe7bd7beed36d50c67575b56c78a3e0f5655c149f6db27c26960a1b65e5bc5ebc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e0e9c9c6489d211c1ee54ad4dcfef6f0fd76e8da15911a8527e9a86d026aa6bf": {
      "address": "0xcaC825F0955aEa17e95aCFd909bf0f3b62017c38",
      "txHash": "0x227354fbed53fce0f14f407df5c7d06975fcd86e410062ad105484eaceb0d40c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "174a2016d51d41a9064e4eeda86a1ba66f40357047c85326515d6a22b81defd5": {
      "address": "0xb3eC72B31CD02a287D997297a60d8051453E986F",
      "txHash": "0x2952f7e27f0bc89598dcd223456dc2e64193d9bf48474dc4e66a42ed8bc82494",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d701799db440adc8e806811da574a2bb1f2933d2e7d9e898da8b2112dff9a109": {
      "address": "0xCFe17C3212E8F5a8d9Fc855217b6B00F8Bb83320",
      "txHash": "0xbe815b2056f5792b15fe20ba372c7d5e0d6abcadf4d482964f1695d95770a170",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "07fa34ba43fcea1a388bea19cd0bdc3f14dbddf6f728a7914ccc357df1307926": {
      "address": "0xC21e32EcbfE5669663B4c48814228013Ea70594B",
      "txHash": "0xc0246e2cd56682933c4411664c6dc7661130fa8f429840b10885702b82706de8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Game",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Game.sol:19"
          },
          {
            "contract": "Game",
            "label": "defiKnight",
            "type": "t_contract(DefiKnight)5796",
            "src": "../project:/contracts/Game.sol:23"
          },
          {
            "contract": "Game",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/Game.sol:24"
          },
          {
            "contract": "Game",
            "label": "knight",
            "type": "t_contract(Knight)8105",
            "src": "../project:/contracts/Game.sol:25"
          },
          {
            "contract": "Game",
            "label": "guild",
            "type": "t_contract(Guild)7363",
            "src": "../project:/contracts/Game.sol:26"
          },
          {
            "contract": "Game",
            "label": "knightMinter",
            "type": "t_contract(IMinter)7511",
            "src": "../project:/contracts/Game.sol:27"
          },
          {
            "contract": "Game",
            "label": "commanderMinter",
            "type": "t_contract(IMinter)7511",
            "src": "../project:/contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "oracle",
            "type": "t_contract(IOracle)7524",
            "src": "../project:/contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "stableCoin",
            "type": "t_contract(IERC20)4625",
            "src": "../project:/contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "presaleFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Game.sol:37"
          },
          {
            "contract": "Game",
            "label": "morale",
            "type": "t_contract(Morale)8661",
            "src": "../project:/contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "isPaused",
            "type": "t_bool",
            "src": "../project:/contracts/Game.sol:39"
          },
          {
            "contract": "Game",
            "label": "enemies",
            "type": "t_mapping(t_uint8,t_struct(Enemy)5878_storage)",
            "src": "../project:/contracts/Game.sol:46"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiKnight)5796": {
            "label": "contract DefiKnight"
          },
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8105": {
            "label": "contract Knight"
          },
          "t_contract(Guild)7363": {
            "label": "contract Guild"
          },
          "t_contract(IMinter)7511": {
            "label": "contract IMinter"
          },
          "t_contract(IOracle)7524": {
            "label": "contract IOracle"
          },
          "t_contract(IERC20)4625": {
            "label": "contract IERC20"
          },
          "t_contract(Morale)8661": {
            "label": "contract Morale"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_struct(Enemy)5878_storage)": {
            "label": "mapping(uint8 => struct Game.Enemy)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Enemy)5878_storage": {
            "label": "struct Game.Enemy",
            "members": [
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "rewards",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9d6c170f6a391bdb82fbdcee8fb1614144a4be2eb56edcbb1cf6d4433faa75b4": {
      "address": "0xdfa69Ed4f69c1D6dBbC5A260A9F8bB1822B28dA7",
      "txHash": "0xaf1aee9a55150683665893bfb9a959e3a14f41f83ef8bd40a20ae2bff1fb7ad9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Knight",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Knight.sol:23"
          },
          {
            "contract": "Knight",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Knight.sol:28"
          },
          {
            "contract": "Knight",
            "label": "knights",
            "type": "t_mapping(t_uint256,t_struct(KnightState)7584_storage)",
            "src": "../project:/contracts/Knight.sol:38"
          },
          {
            "contract": "Knight",
            "label": "knightGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Knight.sol:43"
          },
          {
            "contract": "Knight",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Knight.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(KnightState)7584_storage)": {
            "label": "mapping(uint256 => struct Knight.KnightState)"
          },
          "t_struct(KnightState)7584_storage": {
            "label": "struct Knight.KnightState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "bonusPower",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "6a151bf81679401701b76ec0c261ce9d976d2f9f1eda8d3885587c3315c09ac3": {
      "address": "0x28cfC5F2723eFa152fF82487a9D77a579f7cd96E",
      "txHash": "0x6f3effd89026ea5d5c49a5ad80273f75cf9822ae8f603ed313f9666072ce0694",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5043_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5043_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "9f53062bd3a924b2b1c33c9b129ce70351bedd61777f05e2784c1dbe488b91e6": {
      "address": "0xa855A5C0a96a34A1C224796e06ecB3414738d9C4",
      "txHash": "0xd1f5d1cc9a028930dc931a99d1baab16bbfe74d0093105dcf3d6016b9d032f58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Guild",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Guild.sol:27"
          },
          {
            "contract": "Guild",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Guild.sol:34"
          },
          {
            "contract": "Guild",
            "label": "guildCommander",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:36"
          },
          {
            "contract": "Guild",
            "label": "guildKnight",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:38"
          },
          {
            "contract": "Guild",
            "label": "lastFight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Guild.sol:40"
          },
          {
            "contract": "Guild",
            "label": "guilds",
            "type": "t_mapping(t_uint256,t_struct(GuildState)6719_storage)",
            "src": "../project:/contracts/Guild.sol:50"
          },
          {
            "contract": "Guild",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/Guild.sol:54"
          },
          {
            "contract": "Guild",
            "label": "knight",
            "type": "t_contract(Knight)8098",
            "src": "../project:/contracts/Guild.sol:55"
          },
          {
            "contract": "Guild",
            "label": "guildHelper",
            "type": "t_contract(GuildHelper)7514",
            "src": "../project:/contracts/Guild.sol:56"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(GuildState)6719_storage)": {
            "label": "mapping(uint256 => struct Guild.GuildState)"
          },
          "t_struct(GuildState)6719_storage": {
            "label": "struct Guild.GuildState",
            "members": [
              {
                "label": "emblem",
                "type": "t_bytes32"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "winRate",
                "type": "t_uint8"
              },
              {
                "label": "name",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8098": {
            "label": "contract Knight"
          },
          "t_contract(GuildHelper)7514": {
            "label": "contract GuildHelper"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "25177272eb5ea90ce3ae2691e95fc7f39562eebe3d73716b00395c8b1190442f": {
      "address": "0x847Df053DF634879C9006Cb89dA5C5640b49AD8A",
      "txHash": "0xdd26e6665ba87b56c1fc7018a873c2fab9f847396a03877b14cbfa025e294def",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Game",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Game.sol:19"
          },
          {
            "contract": "Game",
            "label": "defiKnight",
            "type": "t_contract(DefiKnight)5796",
            "src": "../project:/contracts/Game.sol:23"
          },
          {
            "contract": "Game",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/Game.sol:24"
          },
          {
            "contract": "Game",
            "label": "knight",
            "type": "t_contract(Knight)8098",
            "src": "../project:/contracts/Game.sol:25"
          },
          {
            "contract": "Game",
            "label": "guild",
            "type": "t_contract(Guild)7376",
            "src": "../project:/contracts/Game.sol:26"
          },
          {
            "contract": "Game",
            "label": "knightMinter",
            "type": "t_contract(IMinter)7524",
            "src": "../project:/contracts/Game.sol:27"
          },
          {
            "contract": "Game",
            "label": "commanderMinter",
            "type": "t_contract(IMinter)7524",
            "src": "../project:/contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "oracle",
            "type": "t_contract(IOracle)7537",
            "src": "../project:/contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "stableCoin",
            "type": "t_contract(IERC20)4625",
            "src": "../project:/contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "presaleFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Game.sol:37"
          },
          {
            "contract": "Game",
            "label": "morale",
            "type": "t_contract(Morale)8654",
            "src": "../project:/contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "isPaused",
            "type": "t_bool",
            "src": "../project:/contracts/Game.sol:39"
          },
          {
            "contract": "Game",
            "label": "enemies",
            "type": "t_mapping(t_uint8,t_struct(Enemy)5878_storage)",
            "src": "../project:/contracts/Game.sol:46"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiKnight)5796": {
            "label": "contract DefiKnight"
          },
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8098": {
            "label": "contract Knight"
          },
          "t_contract(Guild)7376": {
            "label": "contract Guild"
          },
          "t_contract(IMinter)7524": {
            "label": "contract IMinter"
          },
          "t_contract(IOracle)7537": {
            "label": "contract IOracle"
          },
          "t_contract(IERC20)4625": {
            "label": "contract IERC20"
          },
          "t_contract(Morale)8654": {
            "label": "contract Morale"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_struct(Enemy)5878_storage)": {
            "label": "mapping(uint8 => struct Game.Enemy)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Enemy)5878_storage": {
            "label": "struct Game.Enemy",
            "members": [
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "rewards",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6c26a9407dca12bfc72d9bb382657da2ed8b5b5da848b72bc9e993302594a3bd": {
      "address": "0xf9b55196C222173A715A9D687a99d479a5524F79",
      "txHash": "0x00358b182873ed3123089fb7840c3ee45f185128bddc37207070e0ebc94735a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)355_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Game",
            "label": "counter",
            "type": "t_struct(Counter)4678_storage",
            "src": "../project:/contracts/Game.sol:19"
          },
          {
            "contract": "Game",
            "label": "defiKnight",
            "type": "t_contract(DefiKnight)5796",
            "src": "../project:/contracts/Game.sol:23"
          },
          {
            "contract": "Game",
            "label": "commander",
            "type": "t_contract(Commander)5468",
            "src": "../project:/contracts/Game.sol:24"
          },
          {
            "contract": "Game",
            "label": "knight",
            "type": "t_contract(Knight)8085",
            "src": "../project:/contracts/Game.sol:25"
          },
          {
            "contract": "Game",
            "label": "guild",
            "type": "t_contract(Guild)7363",
            "src": "../project:/contracts/Game.sol:26"
          },
          {
            "contract": "Game",
            "label": "knightMinter",
            "type": "t_contract(IMinter)7511",
            "src": "../project:/contracts/Game.sol:27"
          },
          {
            "contract": "Game",
            "label": "commanderMinter",
            "type": "t_contract(IMinter)7511",
            "src": "../project:/contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "oracle",
            "type": "t_contract(IOracle)7524",
            "src": "../project:/contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "stableCoin",
            "type": "t_contract(IERC20)4625",
            "src": "../project:/contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "presaleFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Game.sol:37"
          },
          {
            "contract": "Game",
            "label": "morale",
            "type": "t_contract(Morale)8641",
            "src": "../project:/contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "isPaused",
            "type": "t_bool",
            "src": "../project:/contracts/Game.sol:39"
          },
          {
            "contract": "Game",
            "label": "enemies",
            "type": "t_mapping(t_uint8,t_struct(Enemy)5878_storage)",
            "src": "../project:/contracts/Game.sol:46"
          }
        ],
        "types": {
          "t_struct(Counter)4678_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiKnight)5796": {
            "label": "contract DefiKnight"
          },
          "t_contract(Commander)5468": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8085": {
            "label": "contract Knight"
          },
          "t_contract(Guild)7363": {
            "label": "contract Guild"
          },
          "t_contract(IMinter)7511": {
            "label": "contract IMinter"
          },
          "t_contract(IOracle)7524": {
            "label": "contract IOracle"
          },
          "t_contract(IERC20)4625": {
            "label": "contract IERC20"
          },
          "t_contract(Morale)8641": {
            "label": "contract Morale"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_struct(Enemy)5878_storage)": {
            "label": "mapping(uint8 => struct Game.Enemy)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Enemy)5878_storage": {
            "label": "struct Game.Enemy",
            "members": [
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "rewards",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)355_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)355_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "48efa230fce9be8716c8f6d7ea4a6148a1fe4cff00dba6f4b915ff75c686e205": {
      "address": "0xa14D89029e3D0DdDaA21fb54c9aAD749f3b19536",
      "txHash": "0x5822625944ac2f5388ae43701a7a1bdfd609e88b68b5d50e959eb31724bbb1d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Commander",
            "label": "counter",
            "type": "t_struct(Counter)4724_storage",
            "src": "../project:/contracts/Commander.sol:23"
          },
          {
            "contract": "Commander",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Commander.sol:29"
          },
          {
            "contract": "Commander",
            "label": "commanders",
            "type": "t_mapping(t_uint256,t_struct(CommanderState)5089_storage)",
            "src": "../project:/contracts/Commander.sol:37"
          },
          {
            "contract": "Commander",
            "label": "commanderGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Commander.sol:42"
          },
          {
            "contract": "Commander",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Commander.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)4724_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(CommanderState)5089_storage)": {
            "label": "mapping(uint256 => struct Commander.CommanderState)"
          },
          "t_struct(CommanderState)5089_storage": {
            "label": "struct Commander.CommanderState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "isGenesis",
                "type": "t_bool"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f887379c4133b424069e9141db701894d0640c344ed0cc4aef019fda556717b1": {
      "address": "0x1099d7240858B6BeEbCA66AEF2F77635c89C9e4c",
      "txHash": "0xbd03f562b4a6695002e1c3d6ef3f7ba403215ec86519b970ec4a4499114cc1d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Knight",
            "label": "counter",
            "type": "t_struct(Counter)4724_storage",
            "src": "../project:/contracts/Knight.sol:23"
          },
          {
            "contract": "Knight",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Knight.sol:28"
          },
          {
            "contract": "Knight",
            "label": "knights",
            "type": "t_mapping(t_uint256,t_struct(KnightState)7630_storage)",
            "src": "../project:/contracts/Knight.sol:38"
          },
          {
            "contract": "Knight",
            "label": "knightGuild",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Knight.sol:43"
          },
          {
            "contract": "Knight",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/Knight.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)4724_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(KnightState)7630_storage)": {
            "label": "mapping(uint256 => struct Knight.KnightState)"
          },
          "t_struct(KnightState)7630_storage": {
            "label": "struct Knight.KnightState",
            "members": [
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "class",
                "type": "t_uint8"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "bonusPower",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "9c5ec48bcea07aa94497d45e99d7149a7c3e68f5c8ea3433d35a81050ca0bb79": {
      "address": "0xCcF9B622de134771207B0dE1abD1f65524af2039",
      "txHash": "0x7a97720bf1bf9829eb03b71eb3d309047e2d2b05efc8e94bbbb300601db6b098",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "GuildHelper",
            "label": "commander",
            "type": "t_contract(Commander)5514",
            "src": "../project:/contracts/GuildHelper.sol:17"
          },
          {
            "contract": "GuildHelper",
            "label": "knight",
            "type": "t_contract(Knight)8131",
            "src": "../project:/contracts/GuildHelper.sol:18"
          },
          {
            "contract": "GuildHelper",
            "label": "guildAddress",
            "type": "t_address",
            "src": "../project:/contracts/GuildHelper.sol:20"
          }
        ],
        "types": {
          "t_contract(Commander)5514": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8131": {
            "label": "contract Knight"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f41d1b2614a9dd8e248c357f332f220013c1acf6f6bd799f4c0893029f62d081": {
      "address": "0x2894Cd819F7F6C9a976b1085E55495cB42bB5Ae8",
      "txHash": "0x1a38db97e3379a99a6ee2e75ab408aff57ff34090debd95e14d4adcaeacc0a33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Guild",
            "label": "counter",
            "type": "t_struct(Counter)4724_storage",
            "src": "../project:/contracts/Guild.sol:27"
          },
          {
            "contract": "Guild",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Guild.sol:34"
          },
          {
            "contract": "Guild",
            "label": "guildCommander",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:36"
          },
          {
            "contract": "Guild",
            "label": "guildKnight",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Guild.sol:38"
          },
          {
            "contract": "Guild",
            "label": "lastFight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Guild.sol:40"
          },
          {
            "contract": "Guild",
            "label": "guilds",
            "type": "t_mapping(t_uint256,t_struct(GuildState)6752_storage)",
            "src": "../project:/contracts/Guild.sol:50"
          },
          {
            "contract": "Guild",
            "label": "commander",
            "type": "t_contract(Commander)5514",
            "src": "../project:/contracts/Guild.sol:54"
          },
          {
            "contract": "Guild",
            "label": "knight",
            "type": "t_contract(Knight)8131",
            "src": "../project:/contracts/Guild.sol:55"
          },
          {
            "contract": "Guild",
            "label": "guildHelper",
            "type": "t_contract(GuildHelper)7547",
            "src": "../project:/contracts/Guild.sol:56"
          }
        ],
        "types": {
          "t_struct(Counter)4724_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(GuildState)6752_storage)": {
            "label": "mapping(uint256 => struct Guild.GuildState)"
          },
          "t_struct(GuildState)6752_storage": {
            "label": "struct Guild.GuildState",
            "members": [
              {
                "label": "emblem",
                "type": "t_bytes32"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "winRate",
                "type": "t_uint8"
              },
              {
                "label": "name",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_contract(Commander)5514": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8131": {
            "label": "contract Knight"
          },
          "t_contract(GuildHelper)7547": {
            "label": "contract GuildHelper"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "a46e5828be4333eb149d0fbae8192778d25cc97a4542aeeeb0abdf584dc2f65f": {
      "address": "0xE53B5Bc535a1fDBcc4F096D1a71A43B92cfE8253",
      "txHash": "0x8aa99cb74443783b9a7277c06edc067ac67138a413dabdea64ff7fa9f138b3b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Morale",
            "label": "guildMorale",
            "type": "t_mapping(t_uint256,t_uint16)",
            "src": "../project:/contracts/Morale.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f1f77b4d36e97e09c7b4d21b71588b495b33492ffc7e0bcbd737d4d27d506dcf": {
      "address": "0x62208763279972cFf948594342336C3594Dbba2c",
      "txHash": "0x7d538a6c1d28cb9796bada788466140d39b630018ecc72d487f3370f4f68570f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)346_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Game",
            "label": "counter",
            "type": "t_struct(Counter)4724_storage",
            "src": "../project:/contracts/Game.sol:19"
          },
          {
            "contract": "Game",
            "label": "defiKnight",
            "type": "t_contract(DefiKnight)5842",
            "src": "../project:/contracts/Game.sol:23"
          },
          {
            "contract": "Game",
            "label": "commander",
            "type": "t_contract(Commander)5514",
            "src": "../project:/contracts/Game.sol:24"
          },
          {
            "contract": "Game",
            "label": "knight",
            "type": "t_contract(Knight)8131",
            "src": "../project:/contracts/Game.sol:25"
          },
          {
            "contract": "Game",
            "label": "guild",
            "type": "t_contract(Guild)7409",
            "src": "../project:/contracts/Game.sol:26"
          },
          {
            "contract": "Game",
            "label": "knightMinter",
            "type": "t_contract(IMinter)7557",
            "src": "../project:/contracts/Game.sol:27"
          },
          {
            "contract": "Game",
            "label": "commanderMinter",
            "type": "t_contract(IMinter)7557",
            "src": "../project:/contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "oracle",
            "type": "t_contract(IOracle)7570",
            "src": "../project:/contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "stableCoin",
            "type": "t_contract(IERC20)4671",
            "src": "../project:/contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "presaleFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Game.sol:37"
          },
          {
            "contract": "Game",
            "label": "morale",
            "type": "t_contract(Morale)8687",
            "src": "../project:/contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "isPaused",
            "type": "t_bool",
            "src": "../project:/contracts/Game.sol:39"
          },
          {
            "contract": "Game",
            "label": "enemies",
            "type": "t_mapping(t_uint8,t_struct(Enemy)5924_storage)",
            "src": "../project:/contracts/Game.sol:46"
          }
        ],
        "types": {
          "t_struct(Counter)4724_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiKnight)5842": {
            "label": "contract DefiKnight"
          },
          "t_contract(Commander)5514": {
            "label": "contract Commander"
          },
          "t_contract(Knight)8131": {
            "label": "contract Knight"
          },
          "t_contract(Guild)7409": {
            "label": "contract Guild"
          },
          "t_contract(IMinter)7557": {
            "label": "contract IMinter"
          },
          "t_contract(IOracle)7570": {
            "label": "contract IOracle"
          },
          "t_contract(IERC20)4671": {
            "label": "contract IERC20"
          },
          "t_contract(Morale)8687": {
            "label": "contract Morale"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_struct(Enemy)5924_storage)": {
            "label": "mapping(uint8 => struct Game.Enemy)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Enemy)5924_storage": {
            "label": "struct Game.Enemy",
            "members": [
              {
                "label": "combatPower",
                "type": "t_uint16"
              },
              {
                "label": "rewards",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)346_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)346_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
